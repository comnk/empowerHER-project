Study of hydrophilic electrospun nanofiber membranes for filtration of micro and nanosize suspended particles
Polymeric nanofiber membranes of polyvinyl chloride (PVC) blended with polyvinylpyrrolidone (PVP) were fabricated using an electrospinning process at different conditions and used for the filtration of three different liquid suspensions to determine the efficiency of the filter membranes. The three liquid suspensions included lake water, abrasive particles from a water jet cutter, and suspended magnetite nanoparticles. The major goal of this research work was to create highly hydrophilic nanofiber membranes and utilize them to filter the suspended liquids at an optimal level of purification (i.e., drinkable level). In order to overcome the fouling/biofouling/blocking problems of the membrane, a coagulation process, which enhances the membrane’s efficiency for removing colloidal particles, was used as a pre-treatment process. Two chemical agents, Tanfloc (organic) and Alum (inorganic), were chosen for the flocculation/coagulation process. The removal efficiency of the suspended particles in the liquids was measured in terms of turbidity, pH, and total dissolved solids (TDS). It was observed that the coagulation/filtration experiments were more efficient at removing turbidity, compared to the direct filtration process performed without any coagulation and filter media.

Cache optimization for mobile devices running multimedia applications
The popularity of mobile/wireless embedded systems running multimedia applications is growing. MPEG4 is an important and demanding multimedia application. With improved CPU, memory subsystem deficiency is the major barrier to improving the system performance. Studies show that there is sufficient reuse of values for caching to significantly reduce the raw required memory bandwidth for video data. Decoding MPEG4 video data in software generates many times more cache-memory traffic than required. Proper understanding of the decoding algorithm and the composition of its data set is obvious to improve the performance of such a system. The focus of this paper is to enhance MPEG4 decoding performance through cache optimization of a mobile device. The architecture we simulate includes a digital signal processor (DSP) to run the decoding algorithm and a two-level cache system. Level-1 cache is split into data (D1) and instruction (I1) caches and level-2 (CL2) is a unified cache. We use Cachegrind and VisualSim simulation tools to optimize cache size, line size, associativity, and levels of caches for a wireless device decoding MPEG4 video.

A time and energy efficient parking system using Zigbee communication protocol
A major problem in large and busy traffic areas is parking vehicles by searching for empty (and available) spaces. In the recent days, some parking lot systems are equipped with sensors and microcontrollers to automatically count the cars parked in the lot. However, such a parking system may not indicate any empty spots. In addition, existing systems are very expensive and suffer due to long processing time and large energy consumption. Recently introduced ZigBee technology is a low-cost and low-power wireless communication protocol targeted towards automation and remote control applications. In this work, we propose a smart parking system for heavy traffic environments using ZigBee wireless transmission module. The proposed system is suitable for multi-floor buildings and able to send a message to vehicles about the status of parking spaces. The parking monitoring system continuously collects the data from parking slot detectors and then it intimates the vehicle section. We simulate the proposed system using ZigBee and two other popular wireless technologies: Bluetooth and Wi-Fi. Experimental results show that ZigBee provides transition time and power advantages over Bluetooth and Wi-Fi.

Improving cache locking performance of modern embedded systems via the addition of a miss table at the L2 cache level
A time-efficient image processing algorithm for multicore/manycore parallel computing
Traditional methods for processing large images are extremely time intensive. Also, conventional image processing methods do not take advantage of available computing resources such as multicore central processing unit (CPU) and manycore general purpose graphics processing unit (GP-GPU). Studies suggest that applying parallel programming techniques to various image filters should improve the overall performance without compromising the existing resources. Recent studies also suggest that parallel implementation of image processing on compute unified device architecture (CUDA)-accelerated CPU/GPU system has potential to process the image very fast. In this paper, we introduce a CUDA-accelerated image processing method suitable for multicore/manycore systems. Using a bitmap file, we implement image processing and filtering through traditional sequential C and newly introduced parallel CUDA/C programs. A key step of the proposed algorithm is to load the pixel's bytes in a one dimensional array with length equal to matrix width * matrix height * bytes per pixel. This is done to process the image concurrently in parallel. According to experimental results, the proposed CUDA-accelerated parallel image processing algorithm provides benefit with a speedup factor up to 365 for an image with 8,192×8,192 pixels.

Evaluation of i-cache locking technique for real-time embedded systems
Cache memory improves performance by reducing the speed gap between the CPU and the main memory. However, the execution time becomes unpredictable due to the cache's adaptive and dynamic behavior. Real-time applications are subject to operational deadlines and predictability is considered necessary to support them. Studies show that for embedded systems, cache locking helps determine the worst case execution time (WCET) and cache-related preemption delay. In this work, we evaluate predictability of an embedded system running real-time applications by instruction cache (I-Cache) locking. We implement an algorithm that locks the blocks that may cause more cache misses, using the Heptane simulation tool. We obtain CPU utilization measures for both cache analysis (no cache locking) and I-cache locking. Experimental results show that our proposed cache locking algorithm improves predictability and performance up to 15% locking, after that, predictability may be further enhanced by sacrificing performance.

Cache modeling and optimization for portable devices running MPEG-4 video decoder
Prevalence of health diseases among Bangladeshi tannery workers and associated risk factors with workplace investigation
Background: The study aimed to estimate the prevalence of health hazards through analyzing different diseases among tannery workers and to identify risks factors of these diseases in tannery workers in Dhaka, Bangladesh. Methods: A cross sectional study was conducted from May 2016 to July 2016 on tannery workers of the industrial area Hazaribagh, Dhaka. Data collection was done among 276 tannery workers engaged in different tanneries located at the area. Face to face interview was performed using a questionnaire and skin diseases faced by the workers were identified by trained medical students. Results: The prevalence of diseases was found as gastrointestinal problem 71.7%, Diarrhea 71.7%, Blood pressure 52.2%, Asthma 49.9%, Eye problem 46.7%. Skin disease prevailed in the following order: Scabies 73.9%, Nail discoloration 69.6%, Urticaria 59.7%, Miliria and foliculities 56.5%. Again negligence of using personal protective equipment named safety boots, gloves and googles have significant influence (p<0.001) on higher prevalence of asthma, eye problems and nail discoloration. Moreover, working areas of pre-tanning and tanning have significant (P<0.001) association with the higher prevalence of scabies and miliria and foliculities. Conclusion: Prevalence of diseases among the tannery workers are very high and is extremely associated with different working areas of leather processing and the lack of proper PPE (Personal protective equipment) using. The risk factors responsible for these health hazards can be eliminated through improving the overall working condition and ensuring the necessary protective regulatory for the Bangladeshi tannery workers.

Simulating multisensor noninvasive blood glucose monitoring systems
Diabetes and related complications are responsible for early death - one person in every 7 seconds. Long term and short term complications due to diabetes can be reduced through proper diet, physical exercise, and medication. In order to assess the pattern of glucose changes of diabetic patients (for determining the appropriate drugs), concentration of glucose in blood needs to be monitored. The pain and inconvenience (due to pricking fingers) in the current invasive blood glucose monitoring technique has led to the emergence of noninvasive blood glucose monitoring (NIBGM) techniques. In this paper, we propose a multisensor NIBGM system using infrared (IR) sensor and ultrasonic micro-electro-micro mechanical (MEMS) technology. We simulate the proposed NIBGM system using COMSOL Multiphysics software and calibrate the system using Matlab code. Lead free piezoelectric materials are evaluated for ultrasonic sensors. Behavior of ultrasonic MEMS is simulated by varying the concentration of blood glucose. The simulation results are cross validated with actual glucose concentration to assess errors. According to simulation results and Clarke error grid analysis (EGA), the proposed NIBGM system has potential to enhance accuracy. By adding easiness and comfort (due to no pricking), the proposed multisensor NIBGM device should provide better assistance to monitor and manage diabetes.

Efficacy and safety of leflunomide in psoriatic arthritis
Objective To compare the effectiveness and safety of leflunomide with methotrexate (MTX) in the treatment of psoriatic arthritis. Methods An open, randomized clinical trial was conducted in 32 patients of psoriatic arthritis at the department of Dermatology and Venereology and Rheumatology wing of Bangabandhu Sheikh Mujib Medical University, Dhaka, Bangladesh, from June 2002 to December 2003. 17 patients of leflunomide group were treated with oral leflunomide l00 mg for first three days followed by 20 mg daily. 15 patients of MTX group were treated with methotrexate 10 mg weekly. Both groups were allowed to take ibuprofen, maximum 1400 mg daily. For both groups hematological and biochemical tests were done at baseline and at every follow-up. All patients were assessed clinically for articular features, psoriasis area and severity index (PASI) for effectiveness and for side effects of drugs was listed for safety measure. Results Sixteen patients of leflunomide group and 14 of MTX group completed 24 weeks follow-up. Male: female ratio was 14:2, in leflunomide and 13:1 in MTX group. Significant improvement was observed in tender joint count, swollen joint count, joint tenderness index, NSAIDs score and PASI score in both groups. Adverse effects in both groups were tolerable and did not require any withdrawal or dose reduction. Asthenia, alopecia, nausea and vomiting were common side effects noticed by patients but overall there was no significant difference in between two groups. Conclusion Leflunomide appears to be as effective and safe as methotrexate in psoriatic arthritis.

Automatic high beam controller for vehicles
Headlights of vehicles great danger during night driving. The drivers of most vehicles use high, bright beam while driving at night. This causes a discomfort to the person travelling from the opposite direction and therefore experiences a sudden glare for a short period of time. This is caused due to the high intense headlight beam from the other vehicle coming towards the one from the opposite direction. In this project, an automatic headlight dimmer which uses a Light Dependent Resistor (LDR) sensor has been designed to dim the headlight of on-coming vehicles to avoid human eye effects. This automatically switched the high beam into low beam, therefore reducing the glare effect by sensing the light intensity value of approaching vehicle and also eliminated the requirement of manual switching by the driver which was not done at all times. Arduino Uno software was employed in designing the project. The system device was able to automatically switch the headlight to low beam when it sensed a vehicle approaching from the opposite side using LDR sensor.

Impact of level-2 cache sharing on the performance and power requirements of homogeneous multicore embedded systems
Impact of L1 entire locking and L2 way locking on the performance, power consumption, and predictability of multicore real-time systems
Based on the recent design trend from giant chip-vendors, multicore systems are being deployed with multilevel caches to achieve higher levels of performance. Supporting real-time applications on multicore systems becomes a great challenge as caches are power hungry and caches make the execution time predictability worse. Studies show that timing predictability can be improved using cache locking techniques. However, level-1 (L1) entire locking may not be efficient if smaller amount of instructions/data compared to the cache size is locked. An alternative choice may be way locking. For some processors, way locking is possible at level-2 (L2) cache (not permitted at L1). Even though both L1 entire locking and L2 way locking improve predictability, it is difficult to justify the performance and power trade-off between these two locking mechanisms. In this work, we simulate a multicore system with two levels of caches to explore the impact of L1 entire locking and L2 way locking on the performance, power consumption, and predictability. Simulation results using FFT, DFT, and MPEG4 algorithms show that both performance and predictability can be increased and power consumption can be decreased by using a cache locking mechanism added to a cache memory hierarchy. Results also show that for FFT and DFT, L2 way locking outperforms L1 entire locking; but for MPEG4, L1 entire locking performs better than L2 way locking.

Evaluation of application-specific multiprocessor mobile system
The popularity of application-specific computing systems is on the rise and many systems have been developed in fields such as multimedia, high -speed networks, information systems, signal and image processing. Real-time application-specific systems are more complex and require more time to develop. In this paper, we explore the architecture of a multiprocessor mobile system running MPEG4 application. We develop a simulation program using VisualSim to evaluate the system performance in terms of utilization, delay, and total number of transactions processed by the different system components for various cache sizes and task rates.

A talented CPU-to-GPU memory mapping technique
In order to fast effective analysis of large systems, high performance computing (HPC) is essential. NVIDIA Compute Unified Device Architecture (CUDA)-assisted central processing unit (CPU) and graphics processing unit (GPU) computing platform has proven its potential to be used for HPC supports. In CPU/GPU computing, original data and instructions are copied from CPU-main-memory to GPU-global-memory. Inside GPU, it would be beneficial to keep the data into shared memory (shared only by the threads of that block) than in the global memory (shared by all threads). However, GPU shared memory is much smaller than GPU global memory (for Fermi Tesla C2075, total shared memory per block is 48 KB and total global memory is 5.6 GB). In this paper, we introduce a CPU-main-memory to GPU-global-memory mapping technique to improve the GPU/overall system performance by increasing the effectiveness of GPU shared memory. Experimental results, from solving Laplace's equation for 512×512 matrix using Fermi and Kepler cards, show that proposed CPU-to-GPU memory mapping technique help decrease the overall execution time by more than 75%.

Impact of CUDA and OpenCL on parallel and distributed computing
Along with high performance computer systems, the Application Programming Interface (API) used is crucial to develop efficient solutions for modern parallel and distributed computing. Compute Unified Device Architecture (CUDA) and Open Computing Language (OpenCL) are two popular APIs that allow General Purpose Graphics Processing Unit (GPGPU, GPU for short) to accelerate processing in applications where they are supported. This paper presents a comparative study of OpenCL and CUDA and their impact on parallel and distributed computing. Mandelbrot set (represents complex numbers) generation, Marching Squares algorithm (represents embarrassingly parallelism), and Bitonic Sorting algorithm (represents distributed computing) are implemented using OpenCL (version 2.x) and CUDA (version 9.x) and run on a Linux-based High Performance Computing (HPC) system. The HPC system uses an Intel i7-9700k processor and an Nvidia GTX 1070 GPU card. Experimental results from 25 different tests using the Mandelbrot Set generation, the Marching Squares algorithm, and the Bitonic Sorting algorithm are analyzed. According to the experimental results, CUDA performs better than OpenCL (up to 7.34x speedup). However, in most cases, OpenCL performs at an acceptable rate (CUDA speedup is less than 2x).

Performance and power comparisons of MPI vs pthread implementations on multicore systems
The advancement of multicore systems demands applications with more threads. In order to facilitate this demand, parallel programming models such as message passing interface (MPI) are developed. By using such models, the execution time and the power consumption can be reduced significantly. However, the performance of MPI programming depends on the total number of threads and the number of processing cores in the system. In this work, we experimentally study the impact of Open MPI and POSIX Thread (Pthread) implementations on performance and power consumption of multicore systems. Data dependent (like heat conduction on 2D surface) and data independent (like matrix multiplication) applications are used with high performance hardware in the experiments. Simulation results suggest that both implementations of more threads running in a system with more cores have potential to reduce the execution time with negligible or little increase in total power consumption. It is observed that the performance of MPI implementation varies (due to the dynamic communication overhead among the processing cores).

Cache optimization for real-time embedded systems
as IT Professional. His current research interests include modeling and simulation, cache memory optimization, multi-core architecture, and real-time embedded system. He has published several journal and conference papers in these areas. He has served as a session chair in various conferences including IMETI CCCT-2009 and IASTED PDCS-2008, iv ACKNOWLEDGEMENTS The author sincerely acknowledges the encouragement and guidance from his dissertation advisor Dr. Imad Mahgoub throughout this work. The author expresses his gratitude to the members of the supervisory committee for their guidance and valuable suggestions. The author is grateful to the Department of Computer and Electrical Engineering and Computer Science and the Office of Admissions for providing all kind of supports during this study and research work at Florida Atlantic University. The author thanks Motorola and Mirabilis Design for their supports to this work. The author expresses his thanks to his wife Manira Rani and friends for their supports throughout the writing of this manuscript. Finally, the author acknowledges the destructions from some individuals throughout this work. Cache memory is used, in most single-core and multi-core processors, to improve performance by bridging the speed gap between the main memory and CPU. Even though cache increases performance, it poses some serious challenges for embedded systems running real-time applications. Cache introduces execution time unpredictability due to its adaptive and dynamic nature and cache consumes vast amount of power to be operated. Energy requirement and execution time predictability are crucial for the success of real-time embedded systems. Various cache optimization schemes have been proposed to address the performance, power consumption, and predictability issues. However, currently available solutions are not adequate for real-time embedded systems as they do not address the performance, power consumption, and execution time predictability issues at the same time. Moreover, existing solutions are not suitable for dealing with multi-core architecture issues. vi In this dissertation, we develop a methodology through cache optimization for real-time embedded systems that can be used to analyze and improve execution time predictability and performance/power ratio at the same time. This methodology is effective for both single-core and multi-core systems. First, we develop a cache modeling and optimization technique for single-core systems to improve performance. Then, we develop a cache modeling and optimization technique for multi-core systems to improve performance/power ratio. We develop a cache locking scheme to improve execution time predictability for real-time systems. We introduce Miss Table (MT) based cache locking scheme with victim …

A security-aware near field communication architecture
Due to the popularity of the Near Field Communication (NFC) applications, NFC technology is being adopted by a wide variety of devices suitable for the Internet of things (IoT). However, NFC is vulnerable to numerous networking attacks such as tag manipulation. In this paper, a security-aware architecture is introduced to protect the NFC devices and associated data from several attacks. The proposed NFC system has a secure protocol, connected to the NFC chip. The NFC Data Exchange Format (NDEF) message is enriched with a certificate record. The proposed NFC system checks the authenticity of the sender first; then if appropriate, processes the incoming NDEF messages and stores them in device memory. The proposed NFC system is simulated using MATLAB. Simulation results suggest that the proposed protocol offers better security by detecting certificate modification, message modification, etc. It is also observed that the processing time remains almost the same for various record sizes and the processing time slightly increases as the certificate size increases. Therefore, the proposed NFC architecture has potential to be used in IoT devices.

An energy-efficient directory based multicore architecture with wireless routers to minimize the communication latency
Multicore architectures suffer from high core-to-core communication latency primarily due to the cache's dynamic behavior. Studies suggest that a directory-approach can be helpful to reduce communication latency by storing the cached block information. Recent studies also indicate that a wireless router has potential to help decrease communication latency in multicore architectures. In this work, we propose a directory based multicore architecture with wireless routers to minimize communication latency. We simulate systems with mesh (used in the Standford Directory Architecture for SHared memory (DASH) architecture), wireless network-on-chip (WNoC), and the proposed directory based architecture with wireless routers. According to the experimental results, our proposed architecture outperforms the WNoC and the mesh architectures. It is observed that the proposed architecture helps decrease the communication delay by up to 15.71 percent and the total power consumption by up to 67.58 percent when compared with the mesh architecture. Similarly, the proposed architecture helps decrease the communication delay by up to 10.00 percent and the total power consumption by up to 58.10 percent when compared with the WNoC architecture. This is due to the fact that the proposed directory based mechanism helps reduce the number of core-to-core communication and the wireless routers help reduce the total number of hops.

DONE