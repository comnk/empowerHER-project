Database system concepts
From the Publisher: 
This acclaimed revision of a classic database systems text offers a complete background in the basics of database design, languages, and system implementation. It provides the latest information combined with real-world examples to help readers master concepts. All concepts are presented in a technically complete yet easy-to-understand style with notations kept to a minimum. A running example of a bank enterprise illustrates concepts at work. To further optimize comprehension, figures and examples, rather than proofs, portray concepts and anticipate results.

Operating system concepts, 10th edition
From the Publisher: 
This best-selling book, now in its fifth edition, provides a solid theoretical foundation for understanding operating systems. Authors Abraham Silberschatz and Peter Galvin discuss key concepts that are applicable to a variety of systems. They also present a large number of examples taken from common operating systems, including WindowsNT and Solaris 2. This book teaches general principles in operating systems while giving the teacher and students the flexibility to choose the implementation system.

HadoopDB: an architectural hybrid of MapReduce and DBMS technologies for analytical workloads
The production environment for analytical data management applications is rapidly changing. Many enterprises are shifting away from deploying their analytical databases on high-end proprietary machines, and moving towards cheaper, lower-end, commodity hardware, typically arranged in a shared-nothing MPP architecture, often in a virtualized environment inside public or private "clouds". At the same time, the amount of data that needs to be analyzed is exploding, requiring hundreds to thousands of machines to work in parallel to perform the analysis. 
 
There tend to be two schools of thought regarding what technology to use for data analysis in such an environment. Proponents of parallel databases argue that the strong emphasis on performance and efficiency of parallel databases makes them well-suited to perform such analysis. On the other hand, others argue that MapReduce-based systems are better suited due to their superior scalability, fault tolerance, and flexibility to handle unstructured data. In this paper, we explore the feasibility of building a hybrid system that takes the best features from both technologies; the prototype we built approaches parallel databases in performance and efficiency, yet still yields the scalability, fault tolerance, and flexibility of MapReduce-based systems.

Operating systems concepts
The study of operating systems is a fundamental component of all undergraduate computer science degree programmes. Making operating system concepts concrete typically entails large programming projects. Such projects traditionally involve enhancing an existing module in a real-world operating system or extending a pedagogical operating system. The latter programming projects represent the gold standard in the teaching of operating systems and their value is undoubted. However, there is room in introductory operating systems courses for supplementary approaches and tools that support the demonstration of operating system concepts in the context of a live, real-world operating system. This paper describes an approach where the Linux monitoring tool SystemTap is used to capture kernel-level events in order to illustrate, with concrete examples, operating system concepts in the areas of scheduling, file system implementation and memory management. For instructors and students (where often for the latter seeing is believing) this approach offers an additional simple and valuable resource for solidifying understanding of concepts that might otherwise remain purely theoretical.

Fundamentos de bases de datos
La teoria de bases de datos incluye los principios formales para definir y manipular datos estructurados e interrelacionados. Para definir los datos se utiliza un modelo de datos y para su manipulacion un lenguaje. Diferentes modelos de datos se han propuesto buscando un mayor nivel expresivo para representar el mundo real. La potencia y limitaciones de cada modelo se pueden evaluar desde un punto de vista teorico y se evidencian desde un punto de vista practico cuando se trata de implementarlos en aplicaciones tradicionales y modernas. Estas ultimas generalmente requieren tipos de datos complejos. Los lenguajes de manipulacion de datos tienen como proposito ofrecer facilidad, simplicidad y flexibilidad a la hora de utilizarlos para actualizar y recuperar informacion desde la base de datos. Los lenguajes de manipulacion son, en su gran mayoria, declarativos, lo que reduce significativamente el tiempo de desarrollo y mantenimiento de las aplicaciones. El proposito de este material es ofrecer a profesores responsables de la asignatura Fundamentos de Bases de Datos, y a los estudiantes, una guia que cubra el contenido completo de la asignatura. La estructura de este material se apoya en el texto guia de la asignatura y no intenta remplazarlo. Los lenguajes de manipulacion de datos tienen como proposito ofrecer facilidad, simplicidad y flexibilidad a la hora de utilizarlos para actualizar y recuperar informacion desde la base de datos. Los lenguajes de manipulacion son, en su gran mayoria, declarativos, lo que reduce significativamente el tiempo de desarrollo y mantenimiento de las aplicaciones. El proposito de este material es ofrecer a profesores responsables de la asignatura Fundamentos de Bases de Datos, y a los estudiantes, una guia que cubra el contenido completo de la asignatura. La estructura de este material se apoya en el texto guia de la asignatura y no intenta remplazarlo.

What makes patterns interesting in knowledge discovery systems
One of the central problems in the field of knowledge discovery is the development of good measures of interestingness of discovered patterns. Such measures of interestingness are divided into objective measures-those that depend only on the structure of a pattern and the underlying data used in the discovery process, and the subjective measures-those that also depend on the class of users who examine the pattern. The focus of the paper is on studying subjective measures of interestingness. These measures are classified into actionable and unexpected, and the relationship between them is examined. The unexpected measure of interestingness is defined in terms of the belief system that the user has. Interestingness of a pattern is expressed in terms of how it affects the belief system. The paper also discusses how this unexpected measure of interestingness can be used in the discovery process.

P4P: Provider portal for applications
As peer-to-peer (P2P) emerges as a major paradigm for scalable network application design, it also exposes significant new challenges in achieving efficient and fair utilization of Internet network resources. Being largely network-oblivious, many P2P applications may lead to inefficient network resource usage and/or low application performance. In this paper, we propose a simple architecture called P4P to allow for more effective cooperative traffic control between applications and network providers. We conducted extensive simulations and real-life experiments on the Internet to demonstrate the feasibility and effectiveness of P4P. Our experiments demonstrated that P4P either improves or maintains the same level of application performance of native P2P applications, while, at the same time, it substantially reduces network provider cost compared with either native or latency-based localized P2P applications.

Operating system concepts
From the Publisher: 
This best-selling book, now in its fifth edition, provides a solid theoretical foundation for understanding operating systems. Authors Abraham Silberschatz and Peter Galvin discuss key concepts that are applicable to a variety of systems. They also present a large number of examples taken from common operating systems, including WindowsNT and Solaris 2. This book teaches general principles in operating systems while giving the teacher and students the flexibility to choose the implementation system.

Sistema de banco de dados
As organizacoes publicas e privadas, armazenam um volume considerado de documentos produzidos no decorrer de suas atividades. Para otimizar esse armazenamento, atualmente sao realizadas solucoes que buscam uma efetiva recuperacao de informacoes, agilizando seu processo na tomada de decisao.  A dificuldade em recuperar a informacao, para auxiliar no processo decisorio das organizacoes e o principal motivo de recorrerem aos profissionais da area de Arquivologia. A pesquisa em tela, objetiva desenvolver um sistema de banco de dados na linguagem MS Access na empresa  da rede varejista de medicamentos na cidade de Londrina/PR, descrevendo e recuperando a informacao da Massa Documental Acumulada(MDA) no decorrer das atividades das organizacoes. Como metodologia foi utilizada a norma vigente no pais a Norma Brasileira de Descricao Arquivistica (NOBRADE)  a partir de suas areas. Apos a implantacao do banco de dados, concluiu-se que a utilizacao da NOBRADE para a descricao da massa documental da empresa e um instrumento fundamental no processo de tomada de decisao, pois o documento gerado pela empresa pode ser recuperado com rapidez e precisao.

Sistema de banco de dados
As organizacoes publicas e privadas, armazenam um volume considerado de documentos produzidos no decorrer de suas atividades. Para otimizar esse armazenamento, atualmente sao realizadas solucoes que buscam uma efetiva recuperacao de informacoes, agilizando seu processo na tomada de decisao.  A dificuldade em recuperar a informacao, para auxiliar no processo decisorio das organizacoes e o principal motivo de recorrerem aos profissionais da area de Arquivologia. A pesquisa em tela, objetiva desenvolver um sistema de banco de dados na linguagem MS Access na empresa  da rede varejista de medicamentos na cidade de Londrina/PR, descrevendo e recuperando a informacao da Massa Documental Acumulada(MDA) no decorrer das atividades das organizacoes. Como metodologia foi utilizada a norma vigente no pais a Norma Brasileira de Descricao Arquivistica (NOBRADE)  a partir de suas areas. Apos a implantacao do banco de dados, concluiu-se que a utilizacao da NOBRADE para a descricao da massa documental da empresa e um instrumento fundamental no processo de tomada de decisao, pois o documento gerado pela empresa pode ser recuperado com rapidez e precisao.

Cyclic association rules
On subjective measures of interestingness in knowledge discovery.
One of the central problems in the field of knowledge discovery is the development of good measures of interestingness of discovered patterns. Such measures of interestingness are divided into objective measures - those that depend only on the structure of a pattern and the underlying data used in the discovery process, and the subjective measures - those that also depend on the class of users who examine the pattern. The purpose of this paper is to lay the groundwork for a comprehensive study of subjective measures of interestingness. In the paper, we classify these measures into actionable and unexpected, and examine the relationship between them. The unexpected measure of interestingness is defined in terms of the belief system that the user has. Interestingness of a pattern is expressed in terms of how it affects the belief system.

Readings in object-oriented database systems
This paper summarizes the interface, implementation, and use of a server process tha t is used as a backend by an object-oriented database system. This server is responsible for managing objects on secondary storage, managing transactions, and implementing a simple form of trigger. We sketch the interface of this system and point out some of the more interesting implementat ion issues tha t were encountered in building

Extended algebra and calculus for nested relational databases
Relaxing the assumption that relations are always in First-Normal-Form (1NF) necessitates a reexamination of the fundamentals of relational database theory. In this paper we take a first step towards unifying the various theories of ¬1NF databases. We start by determining an appropriate model to couch our formalisms in. We then define an extended relational calculus as the theoretical basis for our ¬1NF database query language. We define a minimal extended relational algebra and prove its equivalence to the ¬1NF relational calculus. We define a class of ¬1NF relations with certain “good” properties and extend our algebra operators to work within this domain. We prove certain desirable equivalences that hold only if we restrict our language to this domain.

Overview of multidatabase transaction management
Distributed file systems: Concepts and examples
The purpose of a distributed file system (DFS) is to allow users of physically distributed computers to share data and storage resources by using a common file system. A typical configuration for a DFS is a collection of workstations and mainframes connected by a local area network (LAN). A DFS is implemented as part of the operating system of each of the connected computers. This paper establishes a viewpoint that emphasizes the dispersed structure and decentralization of both data and control in the design of such systems. It defines the concepts of transparency, fault tolerance, and scalability and discusses them in the context of DFSs. The paper claims that the principle of distributed operation is fundamental for a fault tolerant and scalable DFS design. It also presents alternatives for the semantics of sharing and methods for providing access to remote files. A survey of contemporary UNIX-based systems, namely, UNIX United, Locus, Sprite, Sun's Network File System, and ITC's Andrew, illustrates the concepts and demonstrates various implementations and design alternatives. Based on the assessment of these systems, the paper makes the point that a departure from the extending centralized file systems over a communication network is necessary to accomplish sound distributed file system design.

A formal approach to recovery by compensating transactions
Compensating transactions are intended to handle situations where it is required to undo either committed or uncommitted transactions that affect other transactions, without resorting to cascading aborts. This stands in sharp contrast to the standard approach to transaction recovery where cascading aborts are avoided by requiring transactions to read only committed data, and where committed transactions are treated as permanent and irreversible. We argue that this standard approach to recovery is not suitable for a wide range of advanced database applications, in particular those applications that incorporate long-duration or nested transactions. We show how compensating transactions can be effectively used to handle these types of applications. We present a model that allows the definition of a variety of types of correct compensation. These types of compensation range from traditional undo, at one extreme, to application-dependent, special-purpose compensating transactions, at the other extreme.

Computer science handbook
Computer Science: The Discipline and Its Impact, Allen B. Tucker and Peter Wegner Ethical Issues for Computer Scientists, Deborah G. Johnson and Keith W. Miller SECTION I: ALGORITHMS AND COMPLEXITY Basic Techniques for Design and Analysis of Algorithms, Edward M. Reingold Data Structures, Roberto Tamassia and Bryan M. Cantrill Complexity Theory, Eric W. Allender, Michael C. Loui, and Kenneth W. Regan Formal Models and Computability, Tao Jiang, Ming Li, and Bala Ravikumar Graph and Network Algorithms, Samir Khuller and Balaji Raghavachari Algebraic Algorithms, Angel Diaz, Erich Kaltofen, and Victor Y. Pan Cryptography, Jonathan Katz Parallel Algorithms, Guy E. Blelloch and Bruce M. Maggs Computational Geometry, D.T. Lee Randomized Algorithms, Rajeev Motwani and Prabhakar Raghavan Pattern Matching and Text Compression Algorithms, Maxime Crochemore and Thierry Lecroq Genetic Algorithms, Stephanie Forrest Combinatorial Optimization, Vijay Chandru and M.R. Rao SECTION II: ARCHITECTURE AND ORGANIZATION Digital Logic, Miriam Leeser Digital Computer Architecture, David R. Kaeli Memory Systems, Douglas G. Burger, James R. Goodman, and Gurindar S. Sohi Buses, Windsor W. Hsu and Jih-Kwon Peir Input/Output Devices and Interaction Techniques, Ken Hinckley, Robert J.K. Jacob, and Colin Ware Secondary Storage Systems, Alexander Thomasian High-Speed Computer Arithmetic, Earl E. Swartzlander Jr. Parallel Architectures, Michael J. Flynn and Kevin W. Rudd Architecture and Networks, Robert S. Roos Fault Tolerance, Edward J. McCluskey and Subhasish Mitra SECTION III: COMPUTATIONAL SCIENCE Geometry-Grid Generation, Bharat K. Soni and Nigel P. Weatherill Scientific Visualization, William R. Sherman, Alan B. Craig, M. Pauline Baker, and Colleen Bushell Computational Structural Mechanics, Ahmed K. Noor Computational Electromagnetics, J.S. Shang Computational Fluid Dynamics, David A. Caughey Computational Ocean Modeling, Lakshmi Kantha and Steve Piacsek Computational Chemistry, Frederick J. Heldrich, Clyde R. Metz, Henry Donato, Kristin D. Krantzman, Sandra Harper, Jason S. Overby, and Gamil A. Guirgis Computational Astrophysics, Jon Hakkila, Derek Buzasi, and Robert J. Thacker Computational Biology, David T. Kingsbury SECTION IV: GRAPHICS AND VISUAL COMPUTING Overview of Three-Dimensional Computer Graphics, Donald H. House Geometric Primitives, Alyn P. Rockwood Advanced Geometric Modeling, David S. Ebert Mainstream Rendering Techniques, Alan Watt and Steve Maddock Sampling, Reconstruction, and Antialiasing, George Wolberg Computer Animation, Nadia Magnenat Thalmann and Daniel Thalmann Volume Visualization, Arie Kaufman and Klaus Mueller Virtual Reality, Steve Bryson Computer Vision, Daniel Huttenlocher SECTION V: HUMAN-COMPUTER INTERACTION The Organizational Contexts of Development and Use, Jonathan Grudin and M. Lynne Markus Usability Engineering, Jakob Nielsen Task Analysis and the Design of Functionality, David Kieras Human-Centered System Development, Jennifer Tucker and Abby Mackness Graphical User Interface Programming, Brad A. Myers Multimedia, James L. Alty Computer-Supported CollaborativeWork, Fadi P. Deek and James A. McHugh Applying International Usability Standards, Wolfgang Dzida SECTION VI: INFORMATION MANAGEMENT Data Models, Avi Silberschatz, Henry F. Korth, and S. Sudarshan Tuning Database Design for High Performance, Dennis Shasha and Philippe Bonnet Access Methods, Betty Salzberg and Donghui Zhang Query Optimization, Yannis E. Ioannidis Concurrency Control and Recovery, Michael J. Franklin Transaction Processing, Alexander Thomasian Distributed and Parallel Database Systems, M. Tamer Ozsu and Patrick Valduriez Multimedia Databases: Analysis, Modeling, Querying, and Indexing, Vincent Oria, Ying Li, and Chitra Dorai Database Security and Privacy, Sushil Jajodia SECTION VII: INTELLIGENT SYSTEMS Logic-Based Reasoning for Intelligent Systems, James J. Lu and Erik Rosenthal Qualitative Reasoning, Kenneth D. Forbus Search, D. Kopec, T.A. Marsland, and J.L. Cox Understanding Spoken Language, Stephanie Seneff and Victor Zue Decision Trees and Instance-Based Classifiers, J. Ross Quinlan Neural Networks, Michael I. Jordan and Christopher M. Bishop Planning and Scheduling, Thomas Dean and Subbarao Kambhampati Explanation-Based Learning, Gerald DeJong Cognitive Modeling, Eric Chown Graphical Models for Probabilistic and Causal Reasoning, Judea Pearl Robotics, Frank L. Lewis, John M. Fitzgerald, and Kai Liu SECTION VIII: NET-CENTRIC COMPUTING Network Organization and Topologies, William Stallings Routing Protocols, Radia Perlman Network and Internet Security, Steven Bellovin Information Retrieval and Data Mining, Katherine G. Herbert, Jason T.L. Wang, and Jianghui Liu Data Compression, Z. Rahman Security and Privacy, Peter G. Neumann Malicious Software and Hacking, David Ferbrache and Stuart Mort Authentication, Access Control, and Intrusion Detection, Ravi S. Sandhu and Pierangela Samarati SECTION IX: OPERATING SYSTEMS What Is an Operating System?, Raphael Finkel Thread Management for Shared-Memory Multiprocessors, Thomas E. Anderson, Brian N. Bershad, Edward D. Lazowska and Henry M. Levy Process and Device Scheduling, Robert D. Cupper Real-Time and Embedded Systems, John A. Stankovic Process Synchronization and Interprocess Communication, Craig E. Wills Virtual Memory, Peter J. Denning Secondary Storage and Filesystems, Marshall Kirk McKusick Overview of Distributed Operating Systems, Sape J. Mullender Distributed and Multiprocessor Scheduling, Steve J. Chapin and Jon B. Weissman Distributed File Systems and Distributed Memory, T.W. Doeppner Jr. SECTION X: PROGRAMMING LANGUAGES Imperative Language Paradigm, Michael J. Jipping and Kim Bruce The Object-Oriented Language Paradigm, Raimund Ege Functional Programming Languages, Benjamin Goldberg Logic Programming and Constraint Logic Programming, Jacques Cohen Scripting Languages, Robert E. Noonan and William L. Bynum Event-Driven Programming, Allen B. Tucker and Robert E. Noonan Concurrent/Distributed Computing Paradigm, Andrew P. Bernat and Patricia Teller Type Systems, Luca Cardelli Programming Language Semantics, David A. Schmidt Compilers and Interpreters, Kenneth C. Louden Runtime Environments and Memory Management, Robert E. Noonan and William L. Bynum SECTION XI: SOFTWARE ENGINEERING Software Qualities and Principles, Carlo Ghezzi, Mehdi Jazayeri, and Dino Mandrioli Software Process Models, Ian Sommerville Traditional Software Design, Steven A. Demurjian Sr. Object-Oriented Software Design, Steven A. Demurjian Sr. and Patricia J. Pia Software Testing, Gregory M. Kapfhammer Formal Methods, Jonathan P. Bowen and Michael G. Hinchey Verification and Validation, John D. Gannon Development Strategies and Project Management, Roger S. Pressman Software Architecture, Stephen B. Seidman Specialized System Development, Osama Eljabiri and Fadi P. Deek Appendix A: Professional Societies in Computing Appendix B: The ACM Code of Ethics and Professional Conduct Appendix C: Standards-Making Bodies and Standards Appendix D: Common Languages and Conventions Index

Topology discovery in heterogeneous IP networks
Knowledge of the up-to-date physical topology of an IP network is crucial to a number of critical network management tasks, including reactive and proactive resource management, event correlation, and root-cause analysis. Given the dynamic nature of today's IP networks, keeping track of topology information manually is a daunting (if not impossible) task. Thus, effective algorithms for automatically discovering physical network topology are necessary. Earlier work has typically concentrated on either: (a) discovering logical (i.e., layer-3) topology, which implies that the connectivity of all layer-2 elements (e.g., switches and bridges) is ignored; or (b) proprietary solutions targeting specific product families. In this paper, we present novel algorithms for discovering physical topology in heterogeneous (i.e., multi-vendor) IP networks. Our algorithms rely on standard SNMP MIB information that is widely supported by modern IP network elements and require no modifications to the operating system software running on elements or hosts. We have implemented the algorithms presented in this paper in the context of a topology discovery tool that has been tested on Lucent's own research network. The experimental results clearly validate our approach, demonstrating that our tool can consistently discover the accurate physical network topology in time that is roughly quadratic in the number of network elements.

Database systems: Achievements and opportunities
The history of database system research in the U.S. is one of exceptional productivity and startling economic impact. Barely twenty years old as a basic science research field, database research conducted with Federal support in the nation's universities and in its industrial research laboratories has fueled an information services industry estimated at $10 billion per year in the U.S. alone. This industry has grown at an average rate of 20 percent per year since 1965 and is continuing to expand at this rate. Achievements in database research underpin fundamental advances in communications systems, transportation and logistics, financial management, knowledge-based systems, accessibility to scientific literature, and a host of other civilian and defense applications. They also serve as the foundation for considerable progress in basic science in various fields ranging from computing to biology.

DONE