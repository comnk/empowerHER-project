Music generation with Markov models
By using music written in a certain style as training data, parameters can be calculated for Markov chains and hidden Markov models to capture the musical style of the training data as mathematical models.

Verifying android applications using java pathfinder
Mobile application testing is a specialised and complex field. Due to mobile applications' event driven design and mobile runtime environment, there currently exist only a small number of tools to verify these applications. This paper describes the development of JPF-ANDROID, an Android application verification tool. JPF-ANDROID is built on Java Pathfinder, a Java model checking engine. JPF-ANDROID provides a simplified model of the Android framework on which an Android application can run. It then allows the user to script input events to drive the application flow. JPF-ANDROID provides a way to detect common property violations such as deadlocks and runtime exceptions in Android applications.

A computationally inexpensive energy model for horizontal electrical water heaters with scheduling
Electric water heaters (EWHs) remain one of the main contributors to energy consumption in countries where they are used. EWH models serve as a step toward achieving optimized control, and can also be used to inform users of expected savings due to changes if the model is energy-based. Various models have been proposed, but none of them include more than half of the six key features that the model presented in this paper supports horizontal orientation, schedule control, low computational complexity, validation of the model, multinodal stratification, and multinodal standing losses. The presented model is validated against six datasets, four comprising 900 h with multiple water usage events\ and two with only standing losses. The results show that the model estimates energy consumption over ten days including usage with an error of less than 2% and 5% for schedule control and thermostat control, respectively. The simulation model is simple enough to execute ten days of simulation in less than 100 ms on a standard desktop machine, 150 times faster than a prominent model from literature, making it also suitable for large scale simulations or for use on mobile devices.

Analyzing matching time behavior of backtracking regular expression matchers by using ambiguity of NFA
Execution and property specifications for jpf-android
JPF-Android is a model checking tool for Android applications allowing them to be verified outside of an emulator on Java PathFinder (JPF). The Android applications are executed on a model of the Android software stack and their execution driven by simulating user and system input events. This paper follows from our previous work describing the design decisions and implementation of JPF-Android. Here we discuss the syntax and implementation of the scripting environment which is used to drive the execution of the An- droid application under analysis. It also focuses on a further extension to the tool used to automatically monitor the run- time behavior of Android applications.

Analyzing catastrophic backtracking behavior in practical regular expression matching
We consider in some detail how regular expression matching happens in Java, as a popular representative of the category of regex-directed matching engines. We extract a slightly idealized algorithm ...

Energy perceptions in South Africa: An analysis of behaviour and understanding of electric water heaters
Unique addition modules
LetV be a module over a ring R. We define V to be a unique addition module (UAM) if it is not possible to change the addition of V without changing the action of R on V. If R is a domain such that 1 is not the only unit in R and V is a torsion-free i2-module, then we show that V is a UAM if and only if V has rank 1 (or if V={0}). We also classify finitely generated unique addition modules over commutative Artinian rings.

Reducing nondeterministic finite automata with SAT solvers
Turning evil regexes harmless
We explore the relationship between ambiguity in automata and regular expressions on the one hand, and the matching time of backtracking regular expression matchers on the other. We focus in particular on the extreme cases where we have either an exponential amount of ambiguity or no ambiguity at all. We also investigate techniques to reduce or remove ambiguity from regular expressions, which can then be used to transform regular expressions which might be exploited by using algorithmic complexity, into harmless equivalent expressions.

Generation of library models for verification of android applications
Android applications are difficult to verify and test since they have many external dependencies. To overcome this problem, environment generation can be used to create a model of the environment to simulate the behavior of these external dependencies. Creating this environment model manually is a tedious process and although there are many techniques available to generate models, the key lies in identifying how these techniques can be applied to a specific domain. In this paper we discuss two static analysis tools OCSEGen [3] and Modgen [1] and how they can be applied to the Android domain to generate models for specific parts of the environment.

On the semantics of regular expression parsing in the wild
Ducci-sequences and cyclotomic polynomials
Regular Expressions with Lookahead
This paper investigates regular expressions which in addition to the standard operators of union, concatenation, and Kleene star, have lookaheads. We show how to translate regular expressions with lookaheads (REwLA) to equivalent Boolean automata having at most 3 states more than the length of the REwLA. We also investigate the state complexity when translating REwLA to equivalent deterministic finite automata (DFA).

Regular Expressions with Backreferences Re-examined.
. Most modern regular expression matching libraries (one of the rare exceptions being Google’s RE2) allow backreferences, operations which bind a substring to a variable allowing it to be matched again verbatim. However, diﬀerent implementations not only vary in the syntax permitted when using backreferences, but both implementations and deﬁnitions in the literature oﬀer up a number of diﬀerent variants on how backreferences match. Our aim is to compare the various ﬂavors by considering the formal languages that each can describe, resulting in the establishment of a hierarchy of language classes. Beyond the hierarchy itself, some complexity results are given, and as part of the eﬀort on comparing language classes new pumping lemmas are established, and old ones extended to new classes.

ICT-enabled solutions for smart management of water supply in Africa
Pervasive and ubiquitous technologies that include mobile device applications, machine to machine communications, and cloud computing, are increasingly used for cost-effective data aggregation and information dissemination. Recently, this trend has started to gain momentum in the water sector and is being used for various management and monitoring tasks, such as remote leakage detection, automated meter reading and enhanced usage feedback to water users. This paper analyses the challenges faced by various stakeholders (consumers, utilities, etc.) in the water supply industry. Application of the said technologies is then proposed to address these unique challenges and the varying data needs of all stakeholders. An example solution, with a mobile device application and supporting cloud computing solution, is developed and presented as a proof-of-concept to further illustrate the potential use of ICT for water supply management.

Chorale harmonization with weighted finite-state transducers
We approach the task of harmonizing chorales through style imitation by probabilistically modelling the harmony of music pieces in the framework of weighted finite-state transducers (WFSTs), which have been used successfully for probabilistic models in speech and language processing. The framework makes it possible to place domain-specific regular constraints on generated sequences, and to integrate models of different levels of complexity. We divide the harmonization generation process into different steps, each performed by inference through transducers. We present a method for four-part harmonization that models vertical and horizontal structure in the generated harmonizations. The weights in our transducers are learned by maximum likelihood estimation from a corpus of chorales. The predictive power of own model, as measured through entropy, is competitive with that of existing approaches.

Saving on household electric water heating: What works best and by how much?
Electric heating of water for domestic use is a substantial component of total household energy costs. Thermal energy in a water heater is either used (as warm water) or lost to the environment. Various approaches to reduce the losses and improve the efficiency of these notoriously inefficient and costly water heaters have been proposed and are employed. However, given the complex factors at play, making sense of the savings approaches and choosing the right one for the right use case is not a simple task and often misunderstood. This paper addresses this problem by comparing some of the commonly employed approaches, including schedule control, change in set temperature, use of thermal insulation, and reduction in consumed volume. We also compare the impact of environmental factors, such as changing the ambient temperature around the water heater and the cold inlet temperature. The results show that for the consumption profiles and use cases evaluated, schedule control is the most effective, followed by insulation of the tank and piping. Combined, these two interventions save up to 25%. We also find that the effect of the temperature of the cold inlet water dwarfs that of the ambient temperature, is in line with other approaches, and means the installation status quo needs to be reconsidered.

An algorithmic version of the theorem by Latimer and MacDuffee for 2× 2 integral matrices
Cuts in regular expressions
DONE